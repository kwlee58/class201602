?pander
library(pander)
?pander
?panderOptions
??panderOptions
?read.xlsx
library(xlsx)
?read.xlsx
library(gdata)
install.packages("gdata", repos="cran.rstudio.com")
library(gdata)
?read.xls
getwd()
?addmargins
library(wc)
?wc
??wc
library(tm)
help(package = "tm")
?table
?droplevels
?ordered
?labels
?relevel
?levels
?gl
relevel
?relevel
media_effects <- read.xlsx("../data/quiz0427.xlsx", 1, startRow = 2, endRow  = 66, colIndex = 10:35, colClasses = c(rep("character", 26)), header = TRUE)
names(media_effects) <- c(paste("Q", 1:25, sep = ""), "group")
media_effects$group <- factor(media_effects$group, levels = c("Red", "Black"))
str(media_effects)
library(xlsx)
media_effects <- read.xlsx("../data/quiz0427.xlsx", 1, startRow = 2, endRow  = 66, colIndex = 10:35, colClasses = c(rep("character", 26)), header = TRUE)
getwd()
setwd("./R")
media_effects <- read.xlsx("../data/quiz0427.xlsx", 1, startRow = 2, endRow  = 66, colIndex = 10:35, colClasses = c(rep("character", 26)), header = TRUE)
library(pander)
pander(media_effects)
media_effects <- read.xlsx("../data/quiz0427.xlsx", 1, startRow = 2, endRow  = 66, colIndex = 10:30, colClasses = c(rep("character", 21)), header = TRUE)
names(media_effects) <- c(paste("Q", 1:20, sep = ""), "group")
media_effects$group <- factor(media_effects$group, levels = c("Red", "Black"))
str(media_effects)
(ans <- scan("../data/media_effects_ans.txt", what = ""))
(ans.l <- split(ans, f = paste("A", 1:20, sep="")))
(ans.l.2 <- ans.l[paste("A", 1:20, sep="")])
# ans.mat <- matrix(rep(ans, each = nrow(media_effects)), nrow = 70)
# head(ans.mat)
media_effects.marks.rw <- mapply(function(x, y) factor(ifelse(x == y, "R", "W")), y = ans.l.2, media_effects[, -21])
# media_effects.marks <- media_effects[, -1] == ans.mat
pander(media_effects.marks.rw)
media_effects.marks <- ifelse(media_effects.marks.rw == "R", 1, 0)
media_effects.score <- apply(media_effects.marks, 1, sum, na.rm = TRUE) * 4
media_effects.score[media_effects.score == 0] <- NA
pander(media_effects.score)
pander(tapply(media_effects.score, media_effects$group, summary))
# stem(media_effects.score, scale = 2)
stem(media_effects.score, scale = 1)
stem(media_effects.score[media_effects$group == "Red"])
stem(media_effects.score[media_effects$group == "Black"], scale = 0.5)
pander(media_effects.score)
pander(tapply(media_effects.score, media_effects$group, summary))
# stem(media_effects.score, scale = 2)
stem(media_effects.score, scale = 1)
stem(media_effects.score[media_effects$group == "Red"])
stem(media_effects.score[media_effects$group == "Black"], scale = 0.5)
boxplot(media_effects.score ~ media_effects$group)
tapply(media_effects.score, media_effects$group, summary)
t.test(media_effects.score ~ media_effects$group)
boxplot(media_effects.score ~ media_effects$group)
qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black")
# qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black")
qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black", xlim = c(0, 100), ylim = c(0, 100))
# qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black")
qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black", xlim = c(0, 100), ylim = c(0, 100))
abline(a = 0, b = 1)
# qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black")
qqplot(x = media_effects.score[media_effects$group == "Red"], y = media_effects.score[media_effects$group == "Black"], xlab = "Red", ylab = "Black", xlim = c(20, 80), ylim = c(20, 80))
abline(a = 0, b = 1)
media_effects.score.red <- media_effects.score[media_effects$group == "Red" & !is.na(media_effects.score)]
media_effects.score.black <- media_effects.score[media_effects$group == "Black" & !is.na(media_effects.score)]
plot(ecdf(media_effects.score.red), xlim = range(c(media_effects.score.red, media_effects.score.black)), col = "red", main = "ECDF")
plot(ecdf(media_effects.score.black), add = TRUE)
?all
?table
??tabular
media_effects.f < media_effects
media_effects.f <- media_effects
media_effects.f[c(1:2)] <- mapply(factor, media_effects.f[c(1:2)], levels = c("가", "나", "다", "라"))
media_effects.f[c(1:2)]
media_effects.f[, c(1:2)]
pander(mapply(function(x){table(media_effects$group, x)}, media_effects[1:20]))
pander(media_effects)
media_effects.f <- media_effects
media_effects.f[, c(1:2)]
mapply(factor, media_effects[1:2], levels = c("가", "나", "다", "라"))
mapply(funcstion(x){factor(x, levels = c("가", "나", "다", "라")), media_effects[1:2])
mapply(function(x){factor(x, levels = c("가", "나", "다", "라"))}, media_effects[1:2])
media_effects.f[1:2]
?as.factor
?mapply
?cut
pander(media_effects.marks.rw)
str(media_effects.marks.rw)
?mapply
ans.l.2
?aggregate
?mapply
?prop.table
quiz0502 <- read.xlsx("../data/quiz0502.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
library(xlsx)
library(pander)
library(knitr)
quiz0502 <- read.xlsx("../data/quiz0502.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
setwd("./R")
str(quiz0502)
quiz0502 <- read.xlsx("../data/quiz0502.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
str(quiz0502)
names(quiz0502) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "Q1", "Q2", "Q3", "Q4", "group")
quiz0502$dept <- factor(quiz0502$dept)
quiz0502$year <- factor(quiz0502$year)
quiz0502$group <- factor(quiz0502$group, levels = c("Red", "Black"))
quiz0502$Q1 <- factor(quiz0502$Q1, levels = c("가", "나", "다", "라"), labels = c("대공황, 대침체", "대침체, 대공황", "대번영, 대공황", "대공황, 대번영"))
quiz0502$Q2 <- factor(quiz0502$Q2, levels = c("가", "나", "다", "라"), labels = c("소득불평등, 양의상관", "소득, 양의 상관", "소득불평등, 인과관계", "소득, 인과관계"))
quiz0502$Q3 <- factor(quiz0502$Q3, levels = c("가", "나", "다", "라"), labels = c("7.0%", "35%", "70%", "94%"))
install.packages("pander")
chisq.test(matrix(c(18, 23, 10, 6), 2))
?`!=`
quiz0509 <- read.xlsx("../data/quiz0509.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
str(quiz0509)
names(quiz0509) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "Q1", "Q2", "Q3", "Q4", "group")
quiz0509$dept <- factor(quiz0509$dept)
quiz0509$year <- factor(quiz0509$year)
quiz0509$group <- factor(quiz0509$group, levels = c("Red", "Black"))
quiz0509$Q1 <- factor(quiz0509$Q1, levels = c("가", "나", "다", "라"), labels = c("지천태", "천지비", "풍뢰익", "산택손"))
quiz0509$Q2 <- factor(quiz0509$Q2, levels = c("가", "나", "다", "라"), labels = c("높을떄 높다", "낮을떄 낮다", "높을떄 낮다", "높아지면 낮아진다"))
quiz0509[c("Q3", "Q4", "group")]
quiz0509$Q3.2 <- quiz0509$Q3
(Black <- quiz0509$group == "Black")
(Red <- quiz0509$group == "Red")
quiz0509$Q3.2[Black] <- ifelse(quiz0509$Q3.2 == "Beer,17", "Right", "Wrong")
quiz0509$Q3.2[Red] <- ifelse(quiz0509$Q3.2 == "A,3", "Right", "Wrong")
# quiz0509$Q3.2[quiz0509$group == "Black" & quiz0509$Q3.2 == "Beer,17"] <- "Right"
# quiz0509$Q3.2[quiz0509$group == "Black" & quiz0509$Q3.2 != "Beer,17"] <- "Wrong"
# quiz0509$Q3.2[quiz0509$group == "Red" & quiz0509$Q3.2 == "A,3"] <- "Right"
# quiz0509$Q3.2[quiz0509$group == "Red" & quiz0509$Q3.2 != "A,3"] <- "Wrong"
quiz0509$3.2
quiz0509$Q4.2 <- quiz0509$Q4
# quiz0509$Q4.2[quiz0509$group == "Black" & quiz0509$Q4.2 == "A,3"] <- "Right"
# quiz0509$Q4.2[quiz0509$group == "Black" & quiz0509$Q4.2 != "A,3"] <- "Wrong"
# quiz0509$Q4.2[quiz0509$group == "Red" & quiz0509$Q4.2 == "Beer,17"] <- "Right"
# quiz0509$Q4.2[quiz0509$group == "Red" & quiz0509$Q4.2 != "Beer,17"] <- "Wrong"
quiz0509[c("Q3", "Q3.2", "Q4", "Q4.2", "group")]
str(quiz0509)
quiz0509 <- read.xlsx("../data/quiz0509.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
library(xlsx)
quiz0509 <- read.xlsx("../data/quiz0509.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
setwd("./R")
str(quiz0509)
quiz0509 <- read.xlsx("../data/quiz0509.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
names(quiz0509) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "Q1", "Q2", "Q3", "Q4", "group")
quiz0509$dept <- factor(quiz0509$dept)
quiz0509$year <- factor(quiz0509$year)
quiz0509$group <- factor(quiz0509$group, levels = c("Red", "Black"))
quiz0509$Q1 <- factor(quiz0509$Q1, levels = c("가", "나", "다", "라"), labels = c("지천태", "천지비", "풍뢰익", "산택손"))
quiz0509$Q2 <- factor(quiz0509$Q2, levels = c("가", "나", "다", "라"), labels = c("높을떄 높다", "낮을떄 낮다", "높을떄 낮다", "높아지면 낮아진다"))
quiz0509[c("Q3", "Q4", "group")]
quiz0509$Q3.2 <- quiz0509$Q3
(Black <- quiz0509$group == "Black")
(Red <- quiz0509$group == "Red")
quiz0509$Q3.2[Black] <- ifelse(quiz0509$Q3.2 == "Beer,17", "Right", "Wrong")
quiz0509$Q3.2[Black] <- ifelse(quiz0509$Q3.2[Black] == "Beer,17", "Right", "Wrong")
quiz0509$Q3.2[Red] <- ifelse(quiz0509$Q3.2[Red] == "A,3", "Right", "Wrong")
quiz0509$3.2
quiz0509$Q3.2
?table
?prop.table
?addmargins
setwd("./R")
load("./BFI_MI_1601.rda")
names(BFI)
?substr
substr(names(BFI), 1, 1)
substr(names(BFI[, -(1:2)]), 1, 1)
BFI.data <- BFI[, -(1:2)]
BFI.data[, substr(names(BFI.data, 1, 1)) == "E"]
substr(names(BFI.data, 1, 1)) == "E"
names(BFI.data)
substr(names(BFI.data, 1, 1))
substr(names(BFI.data), 1, 1) == "E"
BFI.data[, substr(names(BFI.data), 1, 1) == "E"]
?`==`
BFI.data[, substr(names(BFI.data), 1, 1) == "E"]
BFI.data[, substr(names(BFI.data), 1, 1) == "A"]
BFI.data[, substr(names(BFI.data), 1, 1) == "O"]
BFI.data[, substr(names(BFI.data), 1, 1) == "N"]
sum(BFI.data[, substr(names(BFI.data), 1, 1) == "N"])
sum(BFI.data[, substr(names(BFI.data), 1, 1) == "N"], na.rm = TRUE)
sum(BFI.data[, substr(names(BFI.data), 1, 1) == "N"])
BFI.data[, substr(names(BFI.data), 1, 1) == "N"]
apply(BFI.data[, substr(names(BFI.data), 1, 1) == "N"], 1, sum)
str(apply(BFI.data[, substr(names(BFI.data), 1, 1) == "N"], 1, sum))
abb.BFI <- c("O", "C", "E", "A", "N")
while(x %in% abb.BFI) {BFI.data[, substr(names(BFI.data), 1, 1) == x]}
for(x %in% abb.BFI) {BFI.data[, substr(names(BFI.data), 1, 1) == x]}
?for
,
for(x in abb.BFI) {BFI.data[, substr(names(BFI.data), 1, 1) == x]}
for(x in abb.BFI) BFI.data[, substr(names(BFI.data), 1, 1) == x]
for(x in abb.BFI) y <- BFI.data[, substr(names(BFI.data), 1, 1) == x]
y
mapply(function(x) BFI.data[, substr(names(BFI.data), 1, 1) == x], list(names.BFI))
ls()
mapply(function(x) BFI.data[, substr(names(BFI.data), 1, 1) == x], list(abb.BFI))
list(abb.BFI)
mapply(function(x) BFI.data[, substr(names(BFI.data), 1, 1) == x], abb.BFI)
mapply(function(x) apply(BFI.data[, substr(names(BFI.data), 1, 1) == x], 1, sum), abb.BFI)
str(mapply(function(x) apply(BFI.data[, substr(names(BFI.data), 1, 1) == x], 1, sum), abb.BFI))
c(1, FALSE)
c("a", 1)
c(list(1), "a")
c(TRUE, 1L
)
"one" < 2
1 == "1"
?`<`
"one" < TRUE
c("one", TRUE)
?substr
?strsplit
quiz0518 <- read.xlsx("../data/quiz0518.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
library(xlsx)
quiz0518 <- read.xlsx("../data/quiz0518.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
setwd("./R")
quiz0518 <- read.xlsx("../data/quiz0518.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
str(quiz0518)
(quiz0518$Q1 <- strsplit(quiz0518$Q1, ","))
quiz0518$Q1
quiz0518$Q1[[1]]
paste(quiz0518$Q1[[1]][1],"월", quiz0518$Q1[[1]][2], "일", sep = "")
mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1)
duplicated(mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1))
birthdate <- mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1)
dup.b <- duplicated(mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1))
birthdate[dup.b]
birthdate == "2월15일"
which(birthdate == "2월15일")
quiz0518$Q1[c(12, 52)]
?`[`]
?`[`
birthdate.2 <- mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1[!is.na(quiz0518$Q1)])
birthdate.2
birthdate.3 <- ifelse(is.na(quiz0518$Q1), NA, mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), quiz0518$Q1)
)
birthdate.3
cbind(birthdate, birthdate.3)
strplit(quiz0518$Q2)
strsplit(quiz0518$Q2)
strsplit(quiz0518$Q2, "")
matching <- strsplit(quiz0518$Q2, "")
ans <- strsplit("CNGA", split = "")
ans
ifelse(matching[[1]] == ans, "R", "W")
ifelse(matching[[2]] == ans, "R", "W")
ifelse(matching[[3]] == ans, "R", "W")
ifelse(matching[[4]] == ans, "R", "W")
ifelse(matching[[5]] == ans, "R", "W")
matching[[1]]
matching[[2]]
matching[[2]] == ans
ans
matching[[2]] == ans[[1]]
matching[[2]] == unlist(ans)
matching == ans
matching[1] == ans
mapply(function(x, y) ifelse(x == y, "R", "W"), y = unlist(ans), matching))
mapply(function(x, y) ifelse(x == y, "R", "W"), y = unlist(ans), matching)
str(matching)
mapply(function(x) ifelse(x == unlist(ans), "R", "W"), matching)
mapply(function(x) ifelse(x == unlist(ans), 1, 0), matching)
score <- apply(mapply(function(x) ifelse(x == unlist(ans), 1, 0), matching), 2, sum, na.rm = TRUE)
score
length(score)
score <- apply(mapply(function(x) ifelse(x == unlist(ans), 1, 0), matching), 2, sum)
score
table(score)
table(score, useNA = ifany)
table(score, useNA = "ifany")
chisq.test(table(score), p=(9, 8, 6, 1))
?chisq.test
chisq.test(table(score), p=c(9, 8, 6, 1))
chisq.test(table(score), p=c(9/24, 8/24, 6/24, 1/24))
chisq.test(table(score), p=c(9/24, 8/24, 6/24, 1/24), simulate.p.value = TRUE, B = 2000)
birth_month.date <- strsplit(quiz0518$Q1, ",")
quiz0518 <- read.xlsx("../data/quiz0518.xlsx", 1, startRow = 2, endRow = 66, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
names(quiz0518) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "Q1", "Q2", "Q3", "Q4", "group")
quiz0518$dept <- factor(quiz0518$dept)
quiz0518$year <- factor(quiz0518$year)
quiz0518$group <- factor(quiz0518$group, levels = c("Red", "Black"))
birth_month.date <- strsplit(quiz0518$Q1, ",")
birthdate <- ifelse(is.na(birth_month.date), NA, mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), birth_month.date)
)
quiz0518$Q1.2 <- birthdate
dup.b <- duplicated(birthdate)
birthdate[dup.b]
?duplicated
ifelse(is.na(birthdate), "", duplicated(birthdate))
ifelse(is.na(birthdate), NA, duplicated(birthdate))
birthdate[ifelse(is.na(birthdate), NA, duplicated(birthdate))]
which(ifelse(is.na(birthdate), NA, duplicated(birthdate)))
birthdate == "7월19일"
birthdate[birthdate == "7월19일"]
birthdate[birthdate == "2월15일"]
birthdate
?substring
?gsub
?strsplit
birth_month.date <- mapply([1], strsplit(quiz0518$Q1, ","))
birth_month.date <- mapply(function(x) x[1], strsplit(quiz0518$Q1, ","))
birth_month.date <- strsplit(quiz0518$Q1, ",")
(birth_month <- mapply(function(x) x[1], birth_month.date))
(birth_month <- mapply(function(x) `[`(x, 1), birth_month.date))
x<-c(1,2)
`[`(x, 1)
`[`(x, 2)
x
x[2]
table(birth_month)
months
months()
?months
birth_month.f <- factor(birth_month, levels = 1:12)
table(birth_month.f)
?duplicated
unique(birthdate)
duplicated(birthdate)
duplicated(is.na(birthdate)))
duplicated(is.na(birthdate))
is.na(birthdate)
length(is.na(birthdate))
sum(is.na(birthdate))
length(duplicated(birthdate))
sum(duplicated(birthdate))
ifelse(is.na(duplicated(birthdate)), "", birthdate[dup.b])
duplicated(birthdate)
dup.b <- duplicated(birthdate)
birthdate[dup.b]
birthdate == "7월19일"
birthdate == "2월15일"
birthdate[birthdate == "2월15일"]
birthdate[birthdate == "7월19일"]
birthdate[setdiff(birthdate == "7월19일", is.na(birthdate))]
birthdate == "7월19일"
which(birthdate == "7월19일")
which(birthdate == "2월15일")
dup.b <- anyDuplicated(birthdate)
dup.b
dup.b <- duplicated(birthdate)
dup.b
dup.b <- duplicated(birthdate[!is.na(birthdate)])
dup.b
which(dup.b)
birthdate.2 <- birthdate[!is.na(birthdate)]
birthdate.2
dup.b.2 <- duplicated(birthdate.2)
birthdate.2[which(dup.b.2)]
birthdate.2 == "7월19일"
birthdate.2[birthdate.2 == "7월19일"]
birthdate.2[birthdate.2 == "2월15일"]
savehistory(file = "quiz0518.Rhistory")
