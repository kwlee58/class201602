# BFI.replies <- mapply(function(x) substring(x, first = c(1, 4, 7, 10, 13), last = c(1, 4, 7, 10, 13)), BFI.str.collapse)
BFI.ans <- strsplit("개방성,성실성,외향성,친화성,신경성", split = ",")
BFI.count <- mapply(function(x) ifelse(x == unlist(BFI.ans), 1, 0), BFI.strsplit)
# BFI.count <- mapply(function(x) ifelse(x == unlist(BFI.ans), 1, 0), BFI.first)
# BFI.count <- mapply(function(x) ifelse(x == unlist(BFI.ans), 1, 0), data.frame(BFI.replies))
BFI.score <- apply(BFI.count, 2, sum)
quiz1114$Q2[49]
MI.strsplit <- strsplit(quiz1114$Q2, ",")
# str(MI.strsplit)
# MI.first <- mapply(function(x) sapply(x, substr, 1, 1), MI.strsplit)
# MI.str.collapse <- mapply(function(x) paste(x, sep ="", collapse = ""), MI.strsplit)
# MI.replies <- mapply(function(x) substring(x, first = c(1, 4, 7, 10, 13), last = c(1, 4, 7, 10, 13)), MI.str.collapse)
MI.strsplit[[49]]
MI.ans <- strsplit("신체운동,음악,공간,자기성찰,자연친화,논리수학,언어,인간친화", split = ",")
MI.count <- mapply(function(x) ifelse(x == unlist(MI.ans), 1, 0), MI.strsplit)
# MI.count <- mapply(function(x) ifelse(x == unlist(MI.ans), 1, 0), data.frame(MI.replies))
MI.score <- apply(MI.count, 2, sum)
quiz1114[c("Q3", "Q4", "group")]
quiz1114$Q3.2 <- quiz1114$Q3
Black <- quiz1114$group == "Black"
Red <- quiz1114$group == "Red"
quiz1114$Q3.2[Black] <- ifelse(quiz1114$Q3[Black] == "조퇴", "조퇴", ifelse(quiz1114$Q3[Black] == "Beer,17", "Right", "Wrong"))
quiz1114$Q3.2[Red] <- ifelse(quiz1114$Q3[Red] == "조퇴", "조퇴", ifelse(quiz1114$Q3[Red] == "A,3", "Right", "Wrong"))
# quiz1114$Q3.2[Black] <- ifelse(quiz1114$Q3[Black] == "Beer,17", "Right", "Wrong")
# quiz1114$Q3.2[Red] <- ifelse(quiz1114$Q3[Red] == "A,3", "Right", "Wrong")
# quiz1114$Q3.2[quiz1114$group == "Black" & quiz1114$Q3 == "Beer,17"] <- "Right"
# quiz1114$Q3.2[quiz1114$group == "Black" & quiz1114$Q3 != "Beer,17"] <- "Wrong"
# quiz1114$Q3.2[quiz1114$group == "Red" & quiz1114$Q3 == "A,3"] <- "Right"
# quiz1114$Q3.2[quiz1114$group == "Red" & quiz1114$Q3 != "A,3"] <- "Wrong"
quiz1114$Q3.2
quiz1114$Q4.2 <- quiz1114$Q4
quiz1114$Q4.2[Black] <- ifelse(quiz1114$Q4[Black] == "조퇴", "조퇴", ifelse(quiz1114$Q4[Black] == "A,3", "Right", "Wrong"))
quiz1114$Q4.2[Red] <- ifelse(quiz1114$Q4[Red] == "조퇴", "조퇴", ifelse(quiz1114$Q4[Red] == "Beer,17", "Right", "Wrong"))
# quiz1114$Q4.2[Black] <- ifelse(quiz1114$Q4[Black] == "A,3", "Right", "Wrong")
# quiz1114$Q4.2[Red] <- ifelse(quiz1114$Q4[Red] == "Beer,17", "Right", "Wrong")
# quiz1114$Q4.2[quiz1114$group == "Black" & quiz1114$Q4 == "A,3"] <- "Right"
# quiz1114$Q4.2[quiz1114$group == "Black" & quiz1114$Q4 != "A,3"] <- "Wrong"
# quiz1114$Q4.2[quiz1114$group == "Red" & quiz1114$Q4 == "Beer,17"] <- "Right"
# quiz1114$Q4.2[quiz1114$group == "Red" & quiz1114$Q4 != "Beer,17"] <- "Wrong"
quiz1114[c("Q3", "Q3.2", "Q4", "Q4.2", "group")]
str(quiz1114)
prop.table(tbl.q4.a[, -3], margin = 1)*100
tbl.q4.a <- addmargins(table(quiz1114$group, quiz1114$Q4.2, useNA = "ifany"), margin = 1)
rownames(tbl.q4.a) <- c("Red(구체적 질문 먼저)", "Black(추상적 질문 먼저)", "계")
colnames(tbl.q4.a) <- c("정답", "오답", "조퇴", "계")
kable(tbl.q4.a)
prop.table(tbl.q4.a[, -3], margin = 1)*100
setwd("~/Google 드라이브/Works/Class/Statistics/R.WD/Class_data/class201602/R")
month.name
setwd("~/Google 드라이브/Works/Class/Statistics/R.WD/Class_data/class201602/R")
knitr::opts_chunk$set(echo = TRUE)
# install.packages("pander", repos = "https://cran.rstudio.com")
# install.packages("xlsx", repos = "https://cran.rstudio.com")
library(xlsx)
library(pander)
library(knitr)
panderOptions('table.split.table', Inf)
panderOptions('table.alignment.rownames', 'left')
panderOptions('table.alignment.default', 'right')
options(width = 180)
quiz1116 <- read.xlsx("../data/quiz1116.xlsx", 1, startRow = 2, endRow = 97, colIndex = c(3:7, 9:14), colClasses = c(rep("character", 11)), stringsAsFactors = FALSE)
str(quiz1116)
names(quiz1116) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "Q1", "Q2", "Q3", "Q4", "group")
quiz1116$dept <- factor(quiz1116$dept)
quiz1116$year <- factor(quiz1116$year)
quiz1116$group <- factor(quiz1116$group, levels = c("Red", "Black"))
birth_month.date <- strsplit(quiz1116$Q1, ",")
birth_month.date
birth_month <- mapply(function(x) x[1], birth_month.date)
birth_month.f <- factor(birth_month, levels = 1:12, labels = month.name)
birth.month.f
birth_month.f <- factor(birth_month, levels = 1:12, labels = month.name)
str(birth_month.f)
table(birth_month.f)
?table
table(birth_month.f, useNA = "ifany")
table(birth_month.f)
birthdate <- ifelse(is.na(birth_month.date), NA, mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), birth_month.date))
quiz1116$Q1.2 <- birthdate
quiz1116$Q1.2
birth_month.f
birth_month.date
table(birth_month.f)
?factor
ifelse(birth_month.date == "조퇴", "조퇴", ifelse(is.na(birth_month.date), NA, birth_month.date))
ifelse(birth_month.date == "조퇴", "조퇴", ifelse(is.na(birth_month.date), NA, mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), birth_month.date)))
NR <- birthdate == "조퇴"
NR
which(NR)
NR <- birth_month.date == "조퇴"
which(NR)
NR <- birth_month.date == NA
is.na(birth_month.date)
which(is.na(birth_month.date))
birthdate <- ifelse(birth_month.date == "조퇴", "조퇴", ifelse(is.na(birth_month.date), NA, mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), birth_month.date)))
birth_month.date == "조퇴"
which(birth_month.date == "조퇴")
quiz1116$Q1.2 <- birthdate
NR <- birthdate == "조퇴"
which(NR)
?setdiff
union(NR, is.na(birthdate))
union(which(NR), which(is.na(birthdate)))
setdiff(1:nrow(quiz1114), union(which(NR), which(is.na(birthdata)))
)
setdiff(1:nrow(quiz1116), union(which(NR), which(is.na(birthdata)))
)
setdiff(1:nrow(quiz1116), union(which(NR), which(is.na(birthdate)))
)
nr.index <- which(birthdate == "조퇴")
na.index <- which(is.na(birthdate))
u.nr.na <- union(nr.index, na.index)
birthdate.2 <- birthdate[setdiff(1:nrow(quiz1116), u.nr.na)]
# birthdate.2 <- birthdate[!is.na(birthdate)]
dup.b <- duplicated(birthdate.2)
dup.b
(b.dup.b <- birthdate.2[birthdate.2 %in% unique(birthdate.2[dup.b])])
table(b.dup.b)
tbl.dup.b <- table(b.dup.b)
tbl.dup.b.a <- addmargins(tbl.dup.b)[-2, ]
addmargins(tbl.dup.b)
?ncol
ncol(b.dup.b)
str(addmargins(tbl.dup.b))
colnames(tbl.dup.b.a)
tbl.dup.b.a <- addmargins(tbl.dup.b)
colnames(tbl.dup.b.a)
names(tbl.dup.b.a)
birth_month.f
table(birth_month.f)
addmargins(birth_month.f)
addmargins(table(birth_month.f))
birth_month.date
birth_month
table(birth_month)
factor(birth_month)
factor(birth_month, levels = c(1:12, "조퇴"))
95^2/365
89^2/365
64^2/365
89^2/(2*365)
89*88/365
ls()
mapply(function(x) paste(x[1], "월", x[2], "일", sep = ""), birth_month.date)
sapply(birth_month.date, function(x) paste(x[1], "월", x[2], "일", sep = ""))
setwd("~/Google 드라이브/Works/Class/Statistics/R.WD/Class_data/class201602/R")
library(xlsx)
library(pander)
library(ggplot2)
options(digits=3)
gorilla <- read.xlsx("../data/gorilla1121.xlsx", 1, startRow = 2, endRow = 97, header = FALSE, colIndex = c(3:7, 9:31), colClasses = c(rep("character", 27), "numeric"))
# load("./gorilla_0601.rda")
str(gorilla)
gorilla <- read.xlsx("../data/gorilla1121.xlsx", 1, startRow = 2, endRow = 97, header = FALSE, colIndex = c(3:7, 9:31), colClasses = c(rep("character", 27), "numeric"), stringsAsFactors = FALSE)
# load("./gorilla_0601.rda")
str(gorilla)
names(gorilla) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "group", "Q1", "Q2.1", "Q2.2", "Q2.3", "Q3", "Q4.1", "Q4.2", "Q4.3", "Q4.4", "Q4.5", "Q4.6", "Q5.1", "Q5.2", "Q6.1", "Q6.2", "Q6.3", "Q6.4", "Q7", "Q8", "Q9", "Q10")
gorilla$dept <- factor(gorilla$dept)
gorilla$year <- factor(gorilla$year)
gorilla$group <- factor(gorilla$group, levels = c("Red", "Black"))
str(gorilla)
wrong_diff <- factor(gorilla$Q1, levels = c("가", "나"), labels = c("틀리다", "다르다"))
monkey_panda_banana <- factor(gorilla$Q2.1, levels = c("가", "나", "다"), labels = c("원숭이와 바나나", "원숭이와 팬더", "팬더와 바나나"))
still_happy <- factor(gorilla$Q2.2, levels = c("가", "나"), labels = c("행복해 보인다", "행복해 보이지 않는다"))
which_one_in_front <- factor(gorilla$Q2.3, levels = c("가", "나", "다"), labels = c("맨 위의 비행접시", "중간 위치 비행접시", "맨 아래 비행접시"))
gorilla$Q3.2 <- ifelse(gorilla$Q3 == "조퇴", "조퇴", ifelse(gorilla$Q3 == "가,나,다", "정상인 방", "이상한 방"))
ames_room <- factor(gorilla$Q3.2, levels = c("정상인 방", "이상한 방", "조퇴"))
reading_1 <- factor(gorilla$Q4.1, levels = c("수영", "누영"))
reading_2 <- factor(gorilla$Q4.2, levels = c("미특보살", "미륵보살"))
reading_3 <- factor(gorilla$Q4.3, levels = c("248", "2나8"))
reading_4 <- factor(gorilla$Q4.4, levels = c("너와나", "너와4"))
reading_5 <- factor(gorilla$Q4.5, levels = c("새농어촌건설운동", "애농어촌건설운동"), labels = c("새농어촌건설운동", "모르겠다"))
reading_6 <- factor(gorilla$Q4.6, levels = c("TAE CAT", "TAE CHT", "THE CAT", "THE CHT"))
pass_1.1 <- gorilla$Q5.1
pass_1.2 <- factor(gorilla$Q5.2, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.1 <- gorilla$Q6.1
pass_2.2 <- factor(gorilla$Q6.2, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.3 <- factor(gorilla$Q6.3, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.4 <- factor(gorilla$Q6.4, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
door_study <- factor(gorilla$Q7, levels = c("가", "나"), labels = c("알아차렸다", "몰랐다"))
stereotype <- factor(gorilla$Q8, levels = c("가", "나"), labels = c("무시한다", "팻말에 따른다"))
prejudice <- factor(gorilla$Q9, levels = c("가", "나", "다"), labels = c("동등하게", "백인 우호", "동남아인 우호"))
chocolate <- gorilla$Q10
ls()
pander(table(wrong_diff), caption = "이 사람들은 나하고 생각이")
pander(table(monkey_panda_banana), caption = "두 개를 고른다면?")
pander(table(still_happy), caption = "여전히 행복한가요?")
pander(table(which_one_in_front), caption = "어느 것이 앞쪽에 있나요?")
pander(table(monkey_panda_banana, which_one_in_front), caption = "원숭이-바나나-팬더 vs 어느 것이 앞쪽에 있나요?")
pander(table(ames_room), caption = "정상적인 방으로 보이나요?")
pander(table(reading_1), caption = "이 단어는?")
pander(table(reading_2), caption = "이것은?")
pander(table(reading_3), caption = "이 문구는?")
pander(table(reading_4), caption = "이 문구는?")
pander(table(reading_5), caption = "이 간판 문구는?")
pander(table(reading_6), caption = "이 영어자막은?")
pander(summary(pass_1.1), caption = "흰 셔츠 팀의 패스 성공횟수는?")
pander(table(pass_1.2), caption = "고릴라 본 사람?")
pander(summary(pass_2.1), caption = "흰 셔츠 팀의 패스 성공횟수는?")
pander(table(pass_2.2), caption = "고릴라 본 사람?")
pander(table(pass_2.3), caption = "커튼 색 바뀐 것 본 사람?")
pander(table(pass_2.4), caption = "선수 나가는 것 본 사람?")
pander(table(door_study), caption = "처음부터 알아차렸나요?")
pander(table(stereotype), caption = "나라면?")
pander(table(prejudice), caption = "How do I go to COEX?")
pander(summary(chocolate), caption = "몇 개나 줄 거예요?")
```
pander(table(wrong_diff), caption = "이 사람들은 나하고 생각이")
pander(table(monkey_panda_banana), caption = "두 개를 고른다면?")
pander(table(still_happy), caption = "여전히 행복한가요?")
pander(table(which_one_in_front), caption = "어느 것이 앞쪽에 있나요?")
pander(table(monkey_panda_banana, which_one_in_front), caption = "원숭이-바나나-팬더 vs 어느 것이 앞쪽에 있나요?")
pander(table(ames_room), caption = "정상적인 방으로 보이나요?")
pander(table(reading_1), caption = "이 단어는?")
pander(table(reading_2), caption = "이것은?")
pander(table(reading_3), caption = "이 문구는?")
pander(table(reading_4), caption = "이 문구는?")
pander(table(reading_5), caption = "이 간판 문구는?")
pander(table(reading_6), caption = "이 영어자막은?")
pander(table(pass_1.1), caption = "흰 셔츠 팀의 패스 성공횟수는?")
pander(table(pass_1.2), caption = "고릴라 본 사람?")
gorilla <- read.xlsx("../data/gorilla1121.xlsx", 1, startRow = 2, endRow = 97, header = TRUE, colIndex = c(3:7, 9:31), colClasses = c(rep("character", 27), "numeric"), stringsAsFactors = FALSE)
panderOptions("table.split.table", Inf)
names(gorilla) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "group", "Q1", "Q2.1", "Q2.2", "Q2.3", "Q3", "Q4.1", "Q4.2", "Q4.3", "Q4.4", "Q4.5", "Q4.6", "Q5.1", "Q5.2", "Q6.1", "Q6.2", "Q6.3", "Q6.4", "Q7", "Q8", "Q9", "Q10")
gorilla$dept <- factor(gorilla$dept)
gorilla$year <- factor(gorilla$year)
gorilla$group <- factor(gorilla$group, levels = c("Red", "Black"))
str(gorilla)
wrong_diff <- factor(gorilla$Q1, levels = c("가", "나"), labels = c("틀리다", "다르다"))
monkey_panda_banana <- factor(gorilla$Q2.1, levels = c("가", "나", "다", "조퇴"), labels = c("원숭이와 바나나", "원숭이와 팬더", "팬더와 바나나", "조퇴"))
still_happy <- factor(gorilla$Q2.2, levels = c("가", "나", "조퇴"), labels = c("행복해 보인다", "행복해 보이지 않는다", "조퇴"))
which_one_in_front <- factor(gorilla$Q2.3, levels = c("가", "나", "다", "조퇴"), labels = c("맨 위의 비행접시", "중간 위치 비행접시", "맨 아래 비행접시", "조퇴"))
gorilla$Q3.2 <- ifelse(gorilla$Q3 == "조퇴", "조퇴", ifelse(gorilla$Q3 == "가", "가(평범한 방)", ifelse(gorilla$Q3 == "나", "나(닮은 창 둘)", ifelse(gorilla$Q3 == "다", "다(키큰 왼편 여자)", gorilla$Q3))))
levels.Q3.2 <- c("가,나,다", "가,나", "나,다", "가(평범한 방)", "나(닮은 창 둘)", "다(키큰 왼편 여자)", "조퇴")
ames_room <- factor(gorilla$Q3.2, levels = levels.Q3.2)
reading_1 <- factor(gorilla$Q4.1, levels = c("수영", "누영", "조퇴"))
reading_2 <- factor(gorilla$Q4.2, levels = c("미특보살", "미륵보살", "조퇴"))
reading_3 <- factor(gorilla$Q4.3, levels = c("248", "2나8", "조퇴"))
reading_4 <- factor(gorilla$Q4.4, levels = c("너와나", "너와4", "조퇴"))
reading_5 <- factor(gorilla$Q4.5, levels = c("새농어촌건설운동", "애농어촌건설운동", "조퇴"), labels = c("새농어촌건설운동", "모르겠다", "조퇴"))
reading_6 <- factor(gorilla$Q4.6, levels = c("TAE CAT", "TAE CHT", "THE CAT", "THE CHT", "조퇴"))
pass_1.1 <- as.numeric(gorilla$Q5.1, levels = c("가", "나", "다", "라", "마"), labels = 12:16)
pass_1.2 <- factor(gorilla$Q5.2, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.1 <- gorilla$Q6.1
pass_2.2 <- factor(gorilla$Q6.2, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.3 <- factor(gorilla$Q6.3, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
pass_2.4 <- factor(gorilla$Q6.4, levels = c("가", "나"), labels = c("보았다", "못 보았다"))
door_study <- factor(gorilla$Q7, levels = c("가", "나"), labels = c("알아차렸다", "몰랐다"))
stereotype <- factor(gorilla$Q8, levels = c("가", "나"), labels = c("무시한다", "팻말에 따른다"))
prejudice <- factor(gorilla$Q9, levels = c("가", "나", "다"), labels = c("동등하게", "백인 우호", "동남아인 우호"))
chocolate <- gorilla$Q10
ls()
pander(table(wrong_diff), caption = "이 사람들은 나하고 생각이")
pander(table(monkey_panda_banana), caption = "두 개를 고른다면?")
pander(table(still_happy), caption = "여전히 행복한가요?")
pander(table(which_one_in_front), caption = "어느 것이 앞쪽에 있나요?")
pander(table(monkey_panda_banana, which_one_in_front), caption = "원숭이-바나나-팬더 vs 어느 것이 앞쪽에 있나요?")
pander(table(ames_room), caption = "정상적인 방으로 보이나요?")
pander(table(reading_1), caption = "이 단어는?")
pander(table(reading_2), caption = "이것은?")
pander(table(reading_3), caption = "이 문구는?")
pander(table(reading_4), caption = "이 문구는?")
pander(table(reading_5), caption = "이 간판 문구는?")
pander(table(reading_6), caption = "이 영어자막은?")
pander(table(pass_1.1), caption = "흰 셔츠 팀의 패스 성공횟수는?")
table(gorilla$Q4.4)
levels(table(gorilla$Q4.4))
gorilla$Q4.4 == "너와나"
which(gorilla$Q4.4 == "너와나")
which(gorilla$Q4.4 == "너와나 ")
setwd("~/Google 드라이브/Works/Class/Statistics/R.WD/Class_data/class201602/R")
library(xlsx)
library(pander)
library(ggplot2)
panderOptions("table.split.table", Inf)
options(digits=3)
gorilla <- read.xlsx("../data/gorilla1121.xlsx", 1, startRow = 2, endRow = 97, header = TRUE, colIndex = c(3:7, 9:31), colClasses = c(rep("character", 27), "numeric"), stringsAsFactors = FALSE)
# load("./gorilla_0601.rda")
str(gorilla)
```
names(gorilla) <- c("dept", "id", "name", "year", "e.mail", "cell.no", "group", "Q1", "Q2.1", "Q2.2", "Q2.3", "Q3", "Q4.1", "Q4.2", "Q4.3", "Q4.4", "Q4.5", "Q4.6", "Q5.1", "Q5.2", "Q6.1", "Q6.2", "Q6.3", "Q6.4", "Q7", "Q8", "Q9", "Q10")
gorilla$dept <- factor(gorilla$dept)
gorilla$year <- factor(gorilla$year)
gorilla$group <- factor(gorilla$group, levels = c("Red", "Black"))
str(gorilla)
wrong_diff <- factor(gorilla$Q1, levels = c("가", "나"), labels = c("틀리다", "다르다"))
monkey_panda_banana <- factor(gorilla$Q2.1, levels = c("가", "나", "다", "조퇴"), labels = c("원숭이와 바나나", "원숭이와 팬더", "팬더와 바나나", "조퇴"))
still_happy <- factor(gorilla$Q2.2, levels = c("가", "나", "조퇴"), labels = c("행복해 보인다", "행복해 보이지 않는다", "조퇴"))
which_one_in_front <- factor(gorilla$Q2.3, levels = c("가", "나", "다", "조퇴"), labels = c("맨 위의 비행접시", "중간 위치 비행접시", "맨 아래 비행접시", "조퇴"))
gorilla$Q3.2 <- ifelse(gorilla$Q3 == "조퇴", "조퇴", ifelse(gorilla$Q3 == "가", "가(평범한 방)", ifelse(gorilla$Q3 == "나", "나(닮은 창 둘)", ifelse(gorilla$Q3 == "다", "다(키큰 왼편 여자)", gorilla$Q3))))
levels.Q3.2 <- c("가,나,다", "가,나", "나,다", "가(평범한 방)", "나(닮은 창 둘)", "다(키큰 우측 여자)", "조퇴")
ames_room <- factor(gorilla$Q3.2, levels = levels.Q3.2)
reading_1 <- factor(gorilla$Q4.1, levels = c("수영", "누영", "조퇴"))
reading_2 <- factor(gorilla$Q4.2, levels = c("미특보살", "미륵보살", "조퇴"))
reading_3 <- factor(gorilla$Q4.3, levels = c("248", "2나8", "조퇴"))
reading_4 <- factor(gorilla$Q4.4, levels = c("너와나", "너와4", "조퇴"))
reading_5 <- factor(gorilla$Q4.5, levels = c("새농어촌건설운동", "애농어촌건설운동", "조퇴"), labels = c("새농어촌건설운동", "모르겠다", "조퇴"))
reading_6 <- factor(gorilla$Q4.6, levels = c("TAE CAT", "TAE CHT", "THE CAT", "THE CHT", "조퇴"))
pass_1.1 <- factor(gorilla$Q5.1, levels = c("가", "나", "다", "라", "마", "조퇴"), labels = c(12:16, "조퇴"))
pass_1.2 <- factor(gorilla$Q5.2, levels = c("가", "나", "조퇴"), labels = c("보았다", "못 보았다", "조퇴"))
pass_2.1 <- factor(gorilla$Q6.1, levels = c("가", "나", "다", "라", "마", "조퇴"), labels = c(13:17, "조퇴"))
pass_2.2 <- factor(gorilla$Q6.2, levels = c("가", "나", "조퇴"), labels = c("보았다", "못 보았다", "조퇴"))
pass_2.3 <- factor(gorilla$Q6.3, levels = c("가", "나", "조퇴"), labels = c("보았다", "못 보았다", "조퇴"))
pass_2.4 <- factor(gorilla$Q6.4, levels = c("가", "나", "조퇴"), labels = c("보았다", "못 보았다", "조퇴"))
door_study <- factor(gorilla$Q7, levels = c("가", "나", "조퇴"), labels = c("알아차렸다", "몰랐다", "조퇴"))
stereotype <- factor(gorilla$Q8, levels = c("가", "나", "조퇴"), labels = c("무시한다", "팻말에 따른다", "조퇴"))
prejudice <- factor(gorilla$Q9, levels = c("가", "나", "다", "조퇴"), labels = c("동등하게", "백인 우호", "동남아인 우호", "조퇴"))
chocolate <- factor(gorilla$Q10, levels = c(0:10, "조퇴"))
ls()
}
paste.p <- function(tbl) {
t(matrix(paste(format(prop.table(tbl)*100, digits = 2, nsmall = 1), "%", sep = ""), nrow = dim(tbl)[1], dimnames = dimnames(tbl)))
}
dump(list = "paste.p", file = "./paste_p.R")
source("./paste_p.R")
tbl.wrong_diff <- table(wrong_diff)
pander(tbl.wrong_diff, caption = "이 사람들은 나하고 생각이")
pander(paste.p(tbl.wrong.diff))
pander(paste.p(tbl.wrong_diff))
setwd("~/Google 드라이브/Works/Class/Statistics/R.WD/Class_data/class201602/R")
library(Rfacebook)
library(Rook)
library(qdap)
fb_oauth <- fbOAuth(app_id="1241897489200219", app_secret="7c7e9f2041f6ed04ff989cd061691f2b",extended_permissions=TRUE)
#load("FBoauth")
me <- getUsers("me", token=fb_oauth)
me
pgData <- getPage("stat.in.life", token=fb_oauth, since="2016/08/30", until="2016/12/12")
si <- subset(pgData, comments_count > 1)
nop <- length(si$id)
nop
si$id
pgData
pgData <- getPage("stat.in.life", token=fb_oauth, since="2016/08/30", until="2016/12/12")
pgData1 <- getPage("stat.in.life", token=fb_oauth, since="2016/08/30", until="2016/09/30")
pgData2 <- getPage("stat.in.life", token=fb_oauth, since="2016/10/01", until="2016/10/31")
pgData3 <- getPage("stat.in.life", token=fb_oauth, since="2016/11/01", until="2016/11/30")
pgData4 <- getPage("stat.in.life", token=fb_oauth, since="2016/12/01", until="2016/12/12")
si1 <- subset(pgData1, comments_count > 1)
si2 <- subset(pgData2, comments_count > 1)
si3 <- subset(pgData3, comments_count > 1)
si4 <- subset(pgData4, comments_count > 1)
si <- rbind(si1, si2, si3, si4)
pgData1 <- getPage("stat.in.life", token=fb_oauth, since="2016/08/30", until="2016/09/30")
pgData2 <- getPage("stat.in.life", token=fb_oauth, since="2016/10/01", until="2016/10/31")
pgData3 <- getPage("stat.in.life", token=fb_oauth, since="2016/11/01", until="2016/11/15")
pgData4 <- getPage("stat.in.life", token=fb_oauth, since="2016/11/16", until="2016/12/12")
si1 <- subset(pgData1, comments_count > 1)
si2 <- subset(pgData2, comments_count > 1)
si3 <- subset(pgData3, comments_count > 1)
si4 <- subset(pgData4, comments_count > 1)
si <- rbind(si1, si2, si3, si4)
si
si1 <- subset(pgData1, comments_count > 2)
si2 <- subset(pgData2, comments_count > 2)
si3 <- subset(pgData3, comments_count > 2)
si4 <- subset(pgData4, comments_count > 2)
si <- rbind(si1, si2, si3, si4)
si
nop <- length(si$id)
rownames(si) <- 1:nop
si
comments <- data.frame(from_id=NULL, from_name=NULL, meaage=NULL, post_id=NULL)
for(i in 1:nop) {
tmp <- getPost(si$id[i], token=fb_oauth, comments=TRUE)
## post id
post.id <- tmp$post$id
## user id : comments
##  comments.user <- tmp$comments$from_id
##  comments.name <- tmp$comments$from_name
##  comments.message <- tmp$comments$message
tmp2 <- tmp$comments[, c("from_id", "from_name", "message")]
tmp2$post_id <- rep(post.id, nrow(tmp2))
comments <- rbind(comments, tmp2)
}
str(comments)
si
sum(si$comments_count)
str(comments)
comments$wc <- word_count(comments$message)
table(comments$from_name)
tapply(comments$wc, comments$from_name, mean)
table(comments$from_name)
si
si1 <- subset(pgData1, comments_count > 42)
si2 <- subset(pgData2, comments_count > 42)
si3 <- subset(pgData3, comments_count > 42)
si4 <- subset(pgData4, comments_count > 42)
si <- rbind(si1, si2, si3, si4)
nop <- length(si$id)
rownames(si) <- 1:nop
comments <- data.frame(from_id=NULL, from_name=NULL, meaage=NULL, post_id=NULL)
for(i in 1:nop) {
tmp <- getPost(si$id[i], token=fb_oauth, comments=TRUE)
## post id
post.id <- tmp$post$id
## user id : comments
##  comments.user <- tmp$comments$from_id
##  comments.name <- tmp$comments$from_name
##  comments.message <- tmp$comments$message
tmp2 <- tmp$comments[, c("from_id", "from_name", "message")]
tmp2$post_id <- rep(post.id, nrow(tmp2))
comments <- rbind(comments, tmp2)
}
sum(si$comments_count)
str(comments)
si
tmp
str(comments)
table(comments$post_id)
table(comments$from_name, comments$post_id)
si
str(comments)
tmp
comments <- data.frame(from_id=NULL, from_name=NULL, message=NULL, created_time=NULL, post_id=NULL, post_time=NULL)
for(i in 1:nop) {
tmp <- getPost(si$id[i], token=fb_oauth, comments=TRUE)
## post id
post.id <- tmp$post$id
post.id <- tmp$post$created_time
## user id : comments
##  comments.user <- tmp$comments$from_id
##  comments.name <- tmp$comments$from_name
##  comments.message <- tmp$comments$message
tmp2 <- tmp$comments[, c("from_id", "from_name", "message", "created_time")]
tmp2$post_id <- rep(post.id, nrow(tmp2))
tmp2$post_time <- rep(post.id, nrow(tmp2))
comments <- rbind(comments, tmp2)
}
sum(si$comments_count)
str(comments)
head(comments)
comments <- data.frame(from_id=NULL, from_name=NULL, message=NULL, created_time=NULL, post_id=NULL, post_time=NULL)
for(i in 1:nop) {
tmp <- getPost(si$id[i], token=fb_oauth, comments=TRUE)
## post id
post.id <- tmp$post$id
post.time <- tmp$post$created_time
## user id : comments
##  comments.user <- tmp$comments$from_id
##  comments.name <- tmp$comments$from_name
##  comments.message <- tmp$comments$message
tmp2 <- tmp$comments[, c("from_id", "from_name", "message", "created_time")]
tmp2$post_id <- rep(post.id, nrow(tmp2))
tmp2$post_time <- rep(post.time, nrow(tmp2))
comments <- rbind(comments, tmp2)
}
str(comments)
head(comments)
?gsub
gsub("T", " ", comments$created_time)
gsub("\+0000", "", comments$created_time)
gsub("+0000", "", comments$created_time)
gsub("\+0000", "", comments$created_time)
gsub("+0000", "", comments$created_time)
gsub("[+]0000", "", comments$created_time)
gsub("T|[+]0000", " ", comments$created_time)
comments$created_time <- gsub("T", " ", comments$created_time)
comments$created_time <- gsub("[+]0000", "", comments$created_time)
comments$post_time <- gsub("T", " ", comments$post_time)
comments$post_time <- gsub("[+]0000", "", comments$created_time)
as.Date(comments$created_time)
as.Datetime(comments$created_time)
?as.Date
?as.POSIXct.Date
as.date
as.Date.POSIXlt(comments$created_time)
?as.Date.POSIXlt
?timediff
?time.diff
??timediff
?difftime
timediff(comments$created_time - comments$post_time)
difftime(comments$created_time - comments$post_time)
difftime(comments$created_time, comments$post_time)
as.POSIXct(comments$created_time)
comments$created_time <-as.POSIXct(comments$created_time)
comments <- data.frame(from_id=NULL, from_name=NULL, message=NULL, created_time=NULL, post_id=NULL, post_time=NULL)
for(i in 1:nop) {
tmp <- getPost(si$id[i], token=fb_oauth, comments=TRUE)
## post id
post.id <- tmp$post$id
post.time <- tmp$post$created_time
## user id : comments
##  comments.user <- tmp$comments$from_id
##  comments.name <- tmp$comments$from_name
##  comments.message <- tmp$comments$message
tmp2 <- tmp$comments[, c("from_id", "from_name", "message", "created_time")]
tmp2$post_id <- rep(post.id, nrow(tmp2))
tmp2$post_time <- rep(post.time, nrow(tmp2))
comments <- rbind(comments, tmp2)
}
str(comments)
head(comments)
sum(si$comments_count)
str(comments)
#time
comments$created_time <- gsub("T", " ", comments$created_time)
comments$created_time <- gsub("[+]0000", "", comments$created_time)
comments$post_time <- gsub("T", " ", comments$post_time)
comments$post_time <- gsub("[+]0000", "", comments$post_time)
comments$created_time <-as.POSIXct(comments$created_time)
comments$post_time <-as.POSIXct(comments$post_time)
difftime(comments$created_time, comments$post_time)
difftime(comments$created_time, comments$post_time) /24
floor(difftime(comments$created_time, comments$post_time) /24)
floor(difftime(comments$created_time, comments$post_time) /24) <= 30
comments$timediff <- floor(difftime(comments$created_time, comments$post_time) /24)
comments
table(comments$from_name)
table(comments$post_id)
table(comments$from_name, comments$post_id)
